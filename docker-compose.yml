version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  rabbitmq-container:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "k1-topic:1:1,k2-topic:1:1"
    restart: always

  mysqldb:
    image: 'mysql:5.7'
    environment:
       - MYSQL_ROOT_PASSWORD=root
       - MYSQL_PASSWORD=root
       - MYSQL_DATABASE=test
    ports:
      - "3307:3306"

  #Cassandra
  cassandradatabase:
      image: cassandra
      container_name: cassandradb
      ports:
        - "9042:9042"
      environment:
        - CASSANDRA_HOST=cassandradb
        - CASSANDRA_RPC_ADDRESS=0.0.0.0
  
  web:
    ports:
      - "7080:80"
    build:
      context: FrontEnd
      dockerfile: Dockerfile
    container_name: frontend_v1_2
    restart: always

  m1application:
    ports:
      - "8082:8082"
    build:
      context: M1/MicroService_1
      args:
        JAR_FILE: M1/MicroService_1/target/M1.jar
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq-container
    container_name: m1_container
    depends_on:
      - rabbitmq-container

  m2application:
    ports:
      - "8080:8080"
    build:
      context: M2/M2
      args:
        JAR_FILE: M2/M2/target/M2.jar
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq-container
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/test?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "root"
    container_name: m2_container
    depends_on:
      - kafka
      - mysqldb
      - rabbitmq-container


  m3application:
    ports:
      - "8084:8084"
    build:
      context: M3/MicroService_3
      args:
        JAR_FILE: M3/MicroService_3/target/MicroService_3.jar
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    container_name: m3_container
    depends_on:
      - kafka
      - cassandradatabase
    restart: always




















  
  # m2application:
  #   ports:
  #     - "8080:8080"
  #   build:
  #     context: M2/MicroService_2
  #     args:
  #       JAR_FILE: M2/MicroService_2/target/M2.jar
  #   environment:
  #     SPRING_RABBITMQ_HOST: rabbitmq-container
  #     SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/test?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
  #     SPRING_DATASOURCE_USERNAME: "root"
  #     SPRING_DATASOURCE_PASSWORD: "root"
  #   container_name: m2_container
  #   depends_on:
  #     - kafka
  #     - mysqldb
  #     - rabbitmq-container


  

  # mysqldb:
  #   image: mysql:8
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=root
  #     - MYSQL_DATABASE=test
  #   ports:
  #     - 3307:3306

  

  

    #Cassandra
  # cassandra_database:
  #     build:
  #       context: MicroService_3/Docker_cassandra
  #       dockerfile: Dockerfile
  #     container_name: cassandradb
  #     ports:
  #       - "9042:9042"
  #     environment:
  #       - CASSANDRA_HOST=cassandradb
  #       - CASSANDRA_RPC_ADDRESS=0.0.0.0

  
   
  
 
    





#  m1application_mq:
#    ports:
#      - "7082:7082"
#    build:
#      context: MicroService_1
#      args:
#        JAR_FILE: MQ_service/M1/target/M1_Service.jar
#    environment:
#      SPRING_RABBITMQ_HOST: rabbitmq-container
#    container_name: m1_container_MQ
#    depends_on:
#      - rabbitmq-container
#
#  m2application_mq:
#    ports:
#      - "7080:7080"
#    build:
#      context: MicroService_1
#      args:
#        JAR_FILE: MQ_consumer/M2/target/M2_Service.jar
#    environment:
#      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
#      SPRING_RABBITMQ_HOST: rabbitmq-container
#    container_name: m2_container_MQ
#    depends_on:
#      - kafka
#      - rabbitmq-container
#    restart: always